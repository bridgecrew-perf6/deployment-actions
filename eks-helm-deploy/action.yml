name: EKS Helm deploy action
description: Deploys or destroys Kubernetes resources in an EKS cluster using Helm

inputs:
  cluster:
    description: The name of the EKS cluster to deploy into.
    required: true
  environment:
    description: The Helm environment name, i.e. "production".
    required: true
  namespace:
    description: The Kubernetes namespace to deploy into.
    required: true
  region:
    description: The AWS region to deploy into.
    required: true
  role-arn:
    description: An AWS role ARN that will be assumed for EKS operations.
    required: true
  task:
    description: The task to perform, i.e. "deploy" or "destroy".
    required: true
  twingate-service-key:
    description: A Twingate service key that will be used to connect to Twingate.
    required: false

runs:
  using: "composite"
  steps:
  - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
    shell: bash
  - name: Download package
    if: inputs.task == 'deploy'
    uses: actions/download-artifact@v3
    with:
      name: helm-package
  - uses: azure/setup-helm@v1
    with:
      version: '3.9.0'
  - name: Get chart name
    id: chart-name
    env:
      REPO: ${{ github.repository }}
    shell: bash
    run: echo "::set-output name=name::${REPO/*\//}"
  - name: Assume AWS role
    uses: aws-actions/configure-aws-credentials@v1
    with:
      aws-region: ${{ inputs.region }}
      role-to-assume: ${{ inputs.role-arn }}
  - name: Authenticate with EKS cluster
    shell: bash
    run: |
      aws eks update-kubeconfig \
        --name ${{ inputs.cluster }} \
        --region ${{ inputs.eks-region }}
  - name: Connect to Twingate
    uses: twingate/github-action@v1
    if: inputs.twingate-service-key != ''
    with:
      service-key: ${{ inputs.twingate-service-key }}
  - name: EKS helm ${{ inputs.task }}
    run: eks-helm-deploy.sh
    env:
      CHART_NAME: ${{ steps.chart-name.outputs.name }}
      CLUSTER: ${{ inputs.cluster }}
      ENVIRONMENT: ${{ inputs.environment }}
      NAMESPACE: ${{ inputs.namespace }}
      TAG: ${{ github.sha }}
      TASK: ${{ inputs.task }}
    shell: bash
