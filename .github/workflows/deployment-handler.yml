name: Deployment handler

on:
  workflow_call:
    inputs:
      account-name:
        required: true
        type: string
      cdk-role-arn:
        required: true
        type: string
      codeartifact-domain:
        required: false
        type: string
      codeartifact-domain-owner:
        required: false
        type: string
      codeartifact-namespace:
        required: false
        type: string
      codeartifact-repository:
        required: false
        type: string
      deployment-id:
        required: false
        type: string
      ecr-role-arn:
        required: true
        type: string
      environment:
        required: true
        type: string
      namespace:
        required: true
        type: string
      region:
        required: true
        type: string
      stacks:
        required: false
        type: string
      task:
        required: true
        type: string
    secrets:
      twingate-service-key:
        required: false

jobs:
  cdk-deploy:
    name: CDK ${{ inputs.task }}
    concurrency: cdk-${{ inputs.environment }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: byerobot/actions/cdk-deploy@main
        id: cdk-deploy
        with:
          env_vars: ACCOUNT_NAME=${{ inputs.account-name }},NAMESPACE=${{ inputs.namespace }}
          environment: ${{ inputs.environment }}
          region: ${{ inputs.region }}
          role_arn: ${{ inputs.cdk-role-arn }}
          task: ${{ inputs.task }}
    outputs:
      url: ${{ steps.cdk-deploy.outputs.url }}

  helm-template:
    name: Helm template
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: byerobot/actions/helm-template@main
      with:
        namespace: ${{ inputs.namespace }}

  eks-deploy:
    name: EKS ${{ inputs.task }}
    concurrency: eks-${{ inputs.environment }}
    permissions:
      contents: read
      id-token: write
    needs:
    - helm-template
#    - docker-build # TODO
    runs-on: ubuntu-latest
    steps:
      - uses: byerobot/actions/eks-deploy@main
        with:
          cluster: ${{ inputs.account-name }}
          environment: ${{ inputs.environment }}
          namespace: ${{ inputs.namespace }}
          region: ${{ inputs.region }}
          role_arn: ${{ inputs.cdk-role-arn }}
          task: ${{ inputs.task }}
          twingate-service-key: ${{ secrets.twingate-service-key }}

  update-deployment:
    name: Update deployment
    needs:
    - cdk-deploy
    - eks-deploy
    continue-on-error: true
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    steps:
    - id: get-state
      run: |
        if [[ ${{ needs.cdk-deploy.result }} == 'success' ]] && [[ ${{ needs.eks-deploy.result }} == 'success' ]]; then
          echo "::set-output name=state::success"
        else
          echo "::set-output name=state::failure"
        fi
    - name: Update deployment status (deploy)
      if: inputs.task == 'deploy' && inputs.deployment-id != ''
      uses: chrnorm/deployment-status@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        environment-url: ${{ needs.cdk-deploy.outputs.url }}
        state: ${{ steps.get-state.outputs.state }}
        deployment-id: ${{ inputs.deployment-id }}
    - name: Update deployment status (destroy)
      uses: strumwolf/delete-deployment-environment@v2
      if: inputs.task == 'destroy'
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        environment: ${{ inputs.environment }}
        onlyRemoveDeployments: true
    # TODO: Send notification on failed destroys?

  # eks-deploy:
  #   name: EKS ${{ inputs.task }}
  #   needs:
  #   - generate-manifests
  #   - docker-build
  #   uses: byerobot/actions/.github/workflows/eks-deploy.yml@main
  #   with:
  #     cluster: '${{ inputs.account-name }}'
  #     environment: '${{ inputs.environment }}'
  #     region: '${{ inputs.region }}'
  #     role_arn: '${{ inputs.cdk-role-arn }}'
  #     task: '${{ inputs.task }}'
  #   secrets:
  #     twingate-service-key: ${{ secrets.twingate-service-key }}
