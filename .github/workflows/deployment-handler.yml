on:
  workflow_call:
    inputs:
      action:
        required: true
        type: string
      deployment_id:
        required: true
        type: number
      environment:
        required: true
        type: string
      namespace:
        required: true
        type: string
      region:
        required: true
        type: string
      role_arn:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ inputs.region }}
          role-to-assume: ${{ inputs.role_arn }}
      - name: Install dependencies
        run: yarn
      - name: CDK deploy
        id: cdk-deploy
        env:
          ACTION: ${{ inputs.action }}
          ENVIRONMENT: ${{ inputs.environment }}
          NAMESPACE: ${{ inputs.namespace }}
        run: |
          if [ $ACTION == "deploy" ]; then
            echo "Running cdk deploy..."
            ./node_modules/.bin/cdk deploy --progress events --require-approval never --outputs-file cdk.out.json
            echo "::set-output name=url::$(jq -r '.[].url' cdk.out.json)"
          elif [ $ACTION == "destroy" ]; then
            if [[ $ENVIRONMENT =~ ^prod ]]; then
              echo "ERROR! Cannot destroy a production environment!!"
              exit 1
            else
              echo "Running cdk destroy..."
              ./node_modules/.bin/cdk destroy --progress events --force
            fi
          else
            echo "ERROR! Unrecognized action $ACTION."
          fi
      - name: Update deployment status (deploy)
        uses: bobheadxi/deployments@v1.2.0
        if: ${{ inputs.action == 'deploy' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          step: finish
          status: ${{ job.status }}
          env: ${{ inputs.environment }}
          env_url: ${{ steps.cdk-deploy.outputs.url }}
          deployment_id: ${{ inputs.deployment_id }}
      - name: Update deployment status (destroy)
        uses: bobheadxi/deployments@v1.2.0
        if: ${{ inputs.action == 'destroy' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          step: deactivate-env
          env: ${{ inputs.environment }}
          deployment_id: ${{ inputs.deployment_id }}
