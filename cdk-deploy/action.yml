name: CDK deploy action
description: Deploys or destroys AWS infrastructure using CDK

inputs:
  cdk-region:
    description: The AWS region to deploy into.
    required: true
  cdk-role-arn:
    description: An AWS role ARN that will be assumed for CDK operations.
    required: true
  codeartifact-domain-owner:
    description: The Codeartifact domain owner.
    required: false
  codeartifact-role-arn:
    description: The AWS role ARN that will be assumed for Codeartifact operations.
    required: false
  environment:
    description: The environment to deploy into, i.e. "production".
    required: true
  env-vars:
    description: A comma-separated list of environment variables that will be passed to CDK commands.
    required: false
  path:
    description: The path to the CDK configuration (i.e. cdk.json).
    required: false
    default: .
  stacks:
    description: An optional list of stacks to deploy. Defaults to "--all" if none are given.
    required: false
  task:
    description: The task to perform, i.e. "deploy" or "destroy".
    required: true

runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v3
  - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
    shell: bash
  - name: Detect package manager
    id: detect-package-manager
    shell: bash
    working-directory: ${{ inputs.path }}
    run: |
      if [ -f yarn.lock ]; then
        echo '::set-output name=cache-type::yarn'
        echo '::set-output name=dependency-command::yarn'
      else
        echo '::set-output name=cache-type::npm'
        echo '::set-output name=dependency-command::"npm ci"'
      fi
  - uses: actions/setup-node@v3
    with:
      node-version: 16
      cache: ${{ steps.detect-package-manager.outputs.cache-type }}
  - name: Login to Codeartifact
    if: inputs.codeartifact-role-arn != ''
    id: codeartifact-auth
    uses: riskalyze/deployment-actions/codeartifact-npm-login@v2
    with:
      domain-owner: ${{ inputs.codeartifact-domain-owner }}
      role-arn: ${{ inputs.codeartifact-role-arn }}
  - name: Install dependencies
    shell: bash
    run: ${{ steps.detect-package-manager.outputs.dependency-command }}
    working-directory: ${{ inputs.path }}
  - name: Assume CDK role
    uses: aws-actions/configure-aws-credentials@v1
    with:
      aws-region: ${{ inputs.cdk-region }}
      role-to-assume: ${{ inputs.cdk-role-arn }}
  - name: CDK ${{ inputs.task }}
    id: cdk
    run: cdk-deploy.sh
    working-directory: ${{ inputs.path }}
    env:
      ENVIRONMENT: ${{ inputs.environment }}
      ENV_VARS: ${{ inputs.env-vars }}
      STACKS: ${{ inputs.stacks }}
      TASK: ${{ inputs.task }}
    shell: bash
  - name: Upload outputs artifact
    uses: actions/upload-artifact@v3
    if: inputs.task == 'deploy'
    with:
      name: cdk.out.json
      path: ${{ inputs.path }}/cdk.out.json
